# Generated by Django 3.2.9 on 2022-06-10 13:06

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rb', models.CharField(max_length=50, unique=True, verbose_name='RB')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('registered_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Case',
                'verbose_name_plural': 'Case',
            },
        ),
        migrations.CreateModel(
            name='CaseInvestigator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='status')),
                ('registered_on', models.DateTimeField(auto_now_add=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investigation_case', to='POLICE.case')),
            ],
            options={
                'verbose_name': 'Case Investigator',
                'verbose_name_plural': 'Case Investigator',
            },
        ),
        migrations.CreateModel(
            name='Crime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'verbose_name': 'Crime',
                'verbose_name_plural': 'Crime',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'District',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='District', to='POLICE.district')),
            ],
            options={
                'verbose_name': 'Police Station',
                'verbose_name_plural': 'Police Station',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('code', models.CharField(max_length=4, unique=True)),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Status',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'verbose_name': 'zone',
                'verbose_name_plural': 'zone',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '0.....'. Up to 10 digits allowed.", regex='[0][6-9][0-9]{8}')])),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('title', models.CharField(choices=[('senior', 'senior'), ('registerer', 'registerer'), ('investigator', 'investigator'), ('complaint', 'complaint'), ('Admin', 'Admin')], default=' ', max_length=40)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('residency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='POLICE.district')),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_staff_station', to='POLICE.station')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Zonal', to='POLICE.zone')),
            ],
            options={
                'verbose_name': 'region',
                'verbose_name_plural': 'region',
            },
        ),
        migrations.CreateModel(
            name='InvestigationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='status')),
                ('report_date', models.DateTimeField(auto_now_add=True)),
                ('case_investigator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_investigator', to='POLICE.caseinvestigator')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_status', to='POLICE.status')),
            ],
            options={
                'verbose_name': 'Investigation Record',
                'verbose_name_plural': 'Investigation Record',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Region', to='POLICE.region'),
        ),
        migrations.CreateModel(
            name='Complainant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('registered_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_complainant', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Complainant',
                'verbose_name_plural': 'Complainant',
            },
        ),
        migrations.AddField(
            model_name='caseinvestigator',
            name='investigator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cas_investigator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='case',
            name='complainant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complainant_case', to='POLICE.complainant'),
        ),
        migrations.AddField(
            model_name='case',
            name='crime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_crime', to='POLICE.crime'),
        ),
        migrations.AddField(
            model_name='case',
            name='registerer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_registerer', to=settings.AUTH_USER_MODEL),
        ),
    ]
